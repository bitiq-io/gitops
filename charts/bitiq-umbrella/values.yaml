# Default values used for linting and as safe fallbacks.
# Environment-specific values should continue to live in values-common.yaml or env-derived sources.

env: local
baseDomain: apps-crc.testing
appNamespace: bitiq-local
gitopsNamespace: openshift-gitops
pipelinesNamespace: openshift-pipelines

# Argo CD controller service account (default instance)
argocdControllerServiceAccount: openshift-gitops-argocd-application-controller

repoUrl: https://github.com/bitiq-io/gitops.git
targetRevision: main

imageUpdater:
  platforms: linux/amd64
  pullSecret: ""
  toyService:
    enabled: true
    pause: false
  toyWeb:
    pause: false
  nostrThreads:
    enabled: true
    pause: false

vault:
  runtime:
    enabled: false
  config:
    enabled: false

sampleAppImages:
  toyService: quay.io/paulcapestany/toy-service
  toyWeb: quay.io/paulcapestany/toy-web
  nostrThreads: quay.io/paulcapestany/nostr_threads

# New services (env toggles used by templates)
strfry:
  enabled: false
couchbase:
  enabled: false
nostrQuery:
  enabled: false
nostrThreads:
  enabled: false
nostrThreadCopier:
  enabled: false
nostouch:
  enabled: false
ollama:
  enabled: false
  mode: disabled
certManager:
  enabled: false
  route53CredentialsEnabled: true
  route53CredentialsPath: cert-manager/route53
  route53SecretName: route53-credentials
  route53SecretNamespace: cert-manager

nginxSites:
  enabled: false

bootstrapOperators:
  enabled: false
  caoEnabled: false
  caoChannel: ""
  caoName: ""
  caoSource: ""
  caoSourceNamespace: openshift-marketplace
  caoInstallNamespace: openshift-operators
  caoStartingCSV: ""
  caoApproval: Automatic

ciPipelines:
  serviceAccountName: pipeline
  fsGroup: ""
  eventListener:
    name: bitiq-listener
    githubSecretName: github-webhook-secret
    route: true
  pipelines:
    - name: bitiq-build-and-push
      gitUrl: https://github.com/PaulCapestany/toy-service.git
      gitRevision: main
      dockerfile: Dockerfile
      contextDir: .
      imageRegistry: quay.io
      imageNamespace: paulcapestany
      imageName: toy-service
      tlsVerify: "true"
      # Accept either personal or org repo full name
      repoFullNames:
        - PaulCapestany/toy-service
      runTests: "true"
      testImage: registry.access.redhat.com/ubi9/go-toolset:1.20
      testScript: |
        go test ./...
      eventTypes: ["push"]
    - name: nostr-threads-build-and-push
      gitUrl: https://github.com/PaulCapestany/nostr_threads.git
      gitRevision: main
      dockerfile: Dockerfile
      contextDir: .
      imageRegistry: quay.io
      imageNamespace: paulcapestany
      imageName: nostr_threads
      tlsVerify: "true"
      repoFullNames:
        - PaulCapestany/nostr_threads
      runTests: "true"
      testImage: registry.access.redhat.com/ubi9/go-toolset:1.20
      testScript: |
        go test ./...
      eventTypes: ["push"]
    - name: bitiq-web-build-and-push
      gitUrl: https://github.com/PaulCapestany/toy-web.git
      gitRevision: main
      dockerfile: Dockerfile
      contextDir: .
      imageRegistry: quay.io
      imageNamespace: paulcapestany
      imageName: toy-web
      tlsVerify: "true"
      repoFullNames:
        - PaulCapestany/toy-web
      runTests: "true"
      testImage: registry.access.redhat.com/ubi9/nodejs-20:1-1758500456
      testScript: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi
        if ! npm ls jest-environment-jsdom >/dev/null 2>&1; then
          npm install --save-dev jest-environment-jsdom@^29
        fi
        if [ -f jest.config.js ]; then
          npm pkg set scripts.test="jest --config=jest.config.js --watch=false"
        else
          npm pkg set scripts.test="jest --watch=false"
        fi
        npm test
      eventTypes: ["push"]
