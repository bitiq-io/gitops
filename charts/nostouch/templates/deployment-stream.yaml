{{- if .Values.stream.enabled }}
{{- $cbCreds := .Values.stream.couchbaseCredentials }}
{{- $defaultCmd := printf "nak req --stream %s | nostouch -conn %s" .Values.stream.relayURL .Values.stream.couchbaseConn }}
{{- if and $cbCreds (ne (default true $cbCreds.enabled) false) }}
  {{- $userEnv := default "COUCHBASE_USER" $cbCreds.usernameEnv }}
  {{- $passEnv := default "COUCHBASE_PASSWORD" $cbCreds.passwordEnv }}
  {{- $defaultCmd = printf "%s -user $%s -pass $%s" $defaultCmd $userEnv $passEnv }}
{{- end }}
{{- $shellCommand := default $defaultCmd .Values.stream.shellCommand }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nostouch.streamName" . }}
  labels:
{{ include "nostouch.labels" . | indent 4 }}
    app.kubernetes.io/component: stream
spec:
  replicas: {{ .Values.stream.replicaCount }}
  selector:
    matchLabels:
{{ include "nostouch.streamSelectorLabels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "nostouch.streamSelectorLabels" . | indent 8 }}
{{- with .Values.stream.podLabels }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.stream.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
      serviceAccountName: {{ include "nostouch.serviceAccountName" . }}
{{- with .Values.podSecurityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
{{- end }}
      containers:
        - name: stream
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- with .Values.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
{{- end }}
          command:
            - /bin/sh
          args:
            - -c
            - {{ $shellCommand | quote }}
{{- with .Values.stream.ports }}
          ports:
{{ toYaml . | indent 12 }}
{{- end }}
{{- $hasCreds := and $cbCreds (ne (default true $cbCreds.enabled) false) }}
{{- $envConfig := default (dict) .Values.stream.env }}
{{- $envExtra := default (list) $envConfig.extra }}
{{- $hasExtraEnv := gt (len $envExtra) 0 }}
{{- $envPrefix := default "" $envConfig.envPrefix }}
{{- $hasEnvPrefix := ne $envPrefix "" }}
{{- $gitCommitHash := default "" $envConfig.gitCommitHash }}
{{- $hasGitCommitHash := ne $gitCommitHash "" }}
{{- if or $hasCreds $hasExtraEnv $hasEnvPrefix $hasGitCommitHash }}
          env:
{{- if $hasEnvPrefix }}
            - name: ENV_PREFIX
              value: {{ $envPrefix | quote }}
{{- end }}
{{- if $hasGitCommitHash }}
            - name: GIT_COMMIT_HASH
              value: {{ $gitCommitHash | quote }}
{{- end }}
{{- if $hasCreds }}
            - name: {{ default "COUCHBASE_USER" $cbCreds.usernameEnv }}
              valueFrom:
                secretKeyRef:
                  name: {{ default "couchbase-cluster-auth" $cbCreds.secretName }}
                  key: {{ default "username" $cbCreds.usernameKey }}
            - name: {{ default "COUCHBASE_PASSWORD" $cbCreds.passwordEnv }}
              valueFrom:
                secretKeyRef:
                  name: {{ default "couchbase-cluster-auth" $cbCreds.secretName }}
                  key: {{ default "password" $cbCreds.passwordKey }}
{{- end }}
{{- range $envExtra }}
            - name: {{ .name }}
{{- if .valueFrom }}
              valueFrom:
{{ toYaml .valueFrom | indent 14 }}
{{- else }}
              value: {{ .value | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- if .Values.stream.envFrom }}
          envFrom:
{{- range .Values.stream.envFrom }}
            - {{- if .configMapRef }}
              configMapRef:
{{ toYaml .configMapRef | indent 16 }}
              {{- else if .secretRef }}
              secretRef:
{{ toYaml .secretRef | indent 16 }}
              {{- end }}
{{- end }}
{{- end }}
{{- if .Values.stream.livenessProbe.enabled }}
          livenessProbe:
{{ toYaml (omit .Values.stream.livenessProbe "enabled") | indent 12 }}
{{- end }}
{{- if .Values.stream.readinessProbe.enabled }}
          readinessProbe:
{{ toYaml (omit .Values.stream.readinessProbe "enabled") | indent 12 }}
{{- end }}
          resources:
{{ toYaml .Values.stream.resources | indent 12 }}
      restartPolicy: Always
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- end }}
