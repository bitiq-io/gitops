{{- if .Values.triggers.create }}
{{- $root := . -}}
{{- $defaultSA := .Values.serviceAccountName | default "pipeline" -}}
{{- $listenerSA := .Values.triggers.serviceAccountName -}}
{{ if .Values.triggers.createSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.triggers.githubSecretName }}
  namespace: openshift-pipelines
type: Opaque
stringData:
  secretToken: {{ required "Set triggers.secretToken when triggers.createSecret=true" .Values.triggers.secretToken | quote }}
{{ end }}

{{ range $idx, $pipeline := .Values.pipelines }}
{{- $pipelineSA := $pipeline.serviceAccountName | default $defaultSA -}}
{{- $pipelineFsGroup := coalesce $pipeline.fsGroup $root.Values.fsGroup -}}
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: {{ $pipeline.name }}-template
  namespace: openshift-pipelines
spec:
  params:
    - name: git-repo-url
    - name: git-revision
  resourcetemplates:
    - apiVersion: tekton.dev/v1
      kind: PipelineRun
      metadata:
        generateName: {{ $pipeline.name }}-
        namespace: openshift-pipelines
      spec:
        taskRunTemplate:
          serviceAccountName: {{ $pipelineSA }}
{{- if $pipelineFsGroup }}
          podTemplate:
            securityContext:
              fsGroup: {{ $pipelineFsGroup }}
{{- end }}
        pipelineRef:
          name: {{ $pipeline.name }}
        params:
          - name: git-url
            value: $(tt.params.git-repo-url)
          - name: git-revision
            value: $(tt.params.git-revision)
          - name: runTests
            value: {{ $pipeline.runTests | default "false" | quote }}
          - name: testImage
            value: {{ $pipeline.testImage | default "" | quote }}
          - name: testScript
            value: {{ $pipeline.testScript | default "" | quote }}
        workspaces:
          - name: shared-workspace
            volumeClaimTemplate:
              spec:
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: 2Gi

---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: {{ $pipeline.name }}-binding
  namespace: openshift-pipelines
spec:
  params:
    - name: git-repo-url
      value: $(body.repository.clone_url)
    - name: git-revision
      value: $(body.ref)
{{- end }}

{{- $triggerAccumulator := dict "items" (list) }}
{{- range $idx, $pipeline := .Values.pipelines }}
{{- $events := $pipeline.eventTypes | default (list "push" "pull_request") -}}
{{- $githubParams := list
  (dict "name" "secretRef" "value" (dict "secretName" $root.Values.triggers.githubSecretName "secretKey" "secretToken"))
  (dict "name" "eventTypes" "value" $events)
}}
{{- $interceptors := list (dict "ref" (dict "name" "github") "params" $githubParams) }}
{{- if $pipeline.repoFullName }}
  {{- $celParams := list (dict "name" "filter" "value" (printf "body.repository.full_name == \"%s\"" $pipeline.repoFullName)) }}
  {{- $interceptors = append $interceptors (dict "ref" (dict "name" "cel") "params" $celParams) }}
{{- end }}
{{- $triggerName := trimSuffix "-" (trunc 63 (printf "%s-github" $pipeline.name)) }}
{{- $trigger := dict
  "name" $triggerName
  "interceptors" $interceptors
  "bindings" (list (dict "ref" (printf "%s-binding" $pipeline.name)))
  "template" (dict "ref" (printf "%s-template" $pipeline.name))
}}
{{- $_ := set $triggerAccumulator "items" (append (index $triggerAccumulator "items") $trigger) }}
{{- end }}

---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: {{ .Values.triggers.eventListenerName }}
  namespace: openshift-pipelines
spec:
{{- if $listenerSA }}
  # If a serviceAccountName is explicitly provided, use it; otherwise allow
  # Tekton Triggers to create and bind an EventListener-specific SA with the
  # required RBAC.
  serviceAccountName: {{ $listenerSA }}
{{- end }}
  triggers: {{ toYaml (index $triggerAccumulator "items") | nindent 4 }}

{{ if .Values.triggers.route }}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ .Values.triggers.eventListenerName }}
  namespace: openshift-pipelines
spec:
  to:
    kind: Service
    name: el-{{ .Values.triggers.eventListenerName }}
  tls:
    termination: edge
{{ end }}
{{- end }}
