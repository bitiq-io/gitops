apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: {{ .Values.pipeline.name }}
  namespace: openshift-pipelines
spec:
  params:
    - name: git-url
      type: string
      default: {{ .Values.pipeline.gitUrl | quote }}
    - name: git-revision
      type: string
      default: {{ .Values.pipeline.gitRevision | quote }}
    - name: image
      type: string
      default: "{{ .Values.pipeline.imageRegistry }}/{{ .Values.pipeline.imageNamespace }}/{{ .Values.pipeline.imageName }}"
    - name: runTests
      type: string
      default: {{ .Values.pipeline.runTests | default "false" | quote }}
    - name: testImage
      type: string
      default: {{ .Values.pipeline.testImage | default "" | quote }}
    - name: testScript
      type: string
      default: {{ .Values.pipeline.testScript | default "" | quote }}
    - name: dockerfile
      type: string
      default: {{ .Values.pipeline.dockerfile | quote }}
    - name: context
      type: string
      default: {{ .Values.pipeline.contextDir | quote }}
    - name: tlsverify
      type: string
      default: {{ .Values.pipeline.tlsVerify | quote }}
  workspaces:
    - name: shared-workspace
  tasks:
    - name: fetch-repo
      taskRef:
        resolver: hub
        params:
          - name: type
            value: artifact
          - name: catalog
            value: tekton-catalog-tasks
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: version
            value: "0.10.0"
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.git-revision)
        - name: deleteExisting
          value: "true"
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: compute-image-tag
      runAfter: [fetch-repo]
      taskSpec:
        workspaces:
          - name: source
        results:
          - name: tag
            description: "Deterministic image tag v<semver>-commit.<shortSHA>"
        steps:
          - name: compute
            image: alpine/git:2.45.2
            env:
              - name: HOME
                value: /tekton/home
            script: |
              #!/bin/sh
              set -eu
              # Ensure HOME is writable for git and Tekton creds
              mkdir -p "$HOME"
              cd $(workspaces.source.path)
              git config --global --add safe.directory "$(workspaces.source.path)"
              if git describe --tags --exact-match >/dev/null 2>&1; then
                VER=$(git describe --tags --abbrev=0)
              else
                VER=$(git describe --tags --abbrev=0 2>/dev/null || true)
              fi
              if [ -z "${VER:-}" ]; then
                VER="v0.0.0"
              fi
              SHA=$(git rev-parse --short=7 HEAD)
              TAG="${VER}-commit.${SHA}"
              printf "%s" "$TAG" > /tekton/results/tag
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: run-tests
      runAfter: [fetch-repo]
      when:
        - input: "$(params.runTests)"
          operator: in
          values: ["true", "True", "TRUE"]
      taskSpec:
        workspaces:
          - name: source
        params:
          - name: test-image
          - name: test-script
        steps:
          - name: tests
            image: $(params.test-image)
            env:
              - name: HOME
                value: /tekton/home
            script: |
              #!/bin/sh
              set -euo pipefail
              # Ensure a writable HOME for creds and caches (Go, npm, etc.)
              mkdir -p "$HOME"
              cd $(workspaces.source.path)
              $(params.test-script)
      params:
        - name: test-image
          value: $(params.testImage)
        - name: test-script
          value: $(params.testScript)
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: build-and-push
      runAfter: [compute-image-tag, run-tests]
      taskRef:
        resolver: hub
        params:
          - name: type
            value: artifact
          - name: catalog
            value: tekton-catalog-tasks
          - name: kind
            value: task
          - name: name
            value: buildah
          - name: version
            value: "0.9.0"
      params:
        - name: IMAGE
          value: $(params.image):$(tasks.compute-image-tag.results.tag)
        - name: DOCKERFILE
          value: $(params.dockerfile)
        - name: CONTEXT
          value: $(params.context)
        - name: TLSVERIFY
          value: $(params.tlsverify)
      workspaces:
        - name: source
          workspace: shared-workspace
